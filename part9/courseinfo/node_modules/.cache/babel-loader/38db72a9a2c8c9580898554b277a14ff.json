{"ast":null,"code":"var _jsxFileName = \"/home/elisa/FullStackOpen/part9/courseinfo/src/components/Parts.tsx\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst assertNever = value => {\n  throw new Error(`Unhandled type: ${JSON.stringify(value)}`);\n};\n\nconst Part = _ref => {\n  let {\n    courseParts\n  } = _ref;\n  courseParts.forEach(part => {\n    switch (part.name) {\n      case \"Fundamentals\":\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [part.name, \" \", part.exerciseCount, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 51\n          }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n            children: part.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 19\n          }, this)]\n        }, part.name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 17\n        }, this);\n\n      case \"Advanced\":\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [part.name, \" \", part.exerciseCount, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 51\n          }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n            children: part.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 19\n          }, this)]\n        }, part.name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this);\n\n      case \"Using props to pass data\":\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [part.name, \" \", part.exerciseCount, \" \", part.groupProjectCount]\n        }, part.name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 17\n        }, this);\n\n      case \"Deeper type usage\":\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [part.name, \" \", part.exerciseCount, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 51\n          }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n            children: part.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 44\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            href: part.exerciseSubmissionLink,\n            children: \"Submission Link\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 19\n          }, this)]\n        }, part.name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }, this);\n\n      /*\n      case \"Exhaustive type checking\":\n      return (\n        <p key={part.name}>\n          {part.name} {part.exerciseCount}<br />\n          <i>{part.description}</i><br />\n          Rating: <b>{part.rating}</b>\n        </p>\n      ); */\n\n      default:\n        return assertNever(part);\n    }\n  });\n};\n\n_c = Part;\nexport default Part;\n\nvar _c;\n\n$RefreshReg$(_c, \"Part\");","map":{"version":3,"sources":["/home/elisa/FullStackOpen/part9/courseinfo/src/components/Parts.tsx"],"names":["React","assertNever","value","Error","JSON","stringify","Part","courseParts","forEach","part","name","exerciseCount","description","groupProjectCount","exerciseSubmissionLink"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAIA,MAAMC,WAAW,GAAIC,KAAD,IAAyB;AAC3C,QAAM,IAAIC,KAAJ,CACH,mBAAkBC,IAAI,CAACC,SAAL,CAAeH,KAAf,CAAsB,EADrC,CAAN;AAGD,CAJD;;AAMA,MAAMI,IAAI,GAAG,QAA+C;AAAA,MAA9C;AAACC,IAAAA;AAAD,GAA8C;AACxDA,EAAAA,WAAW,CAACC,OAAZ,CAAoBC,IAAI,IAAI;AACxB,YAAOA,IAAI,CAACC,IAAZ;AACI,WAAK,cAAL;AACE,4BACE;AAAA,qBACGD,IAAI,CAACC,IADR,OACeD,IAAI,CAACE,aADpB,eACkC;AAAA;AAAA;AAAA;AAAA,kBADlC,eAEE;AAAA,sBAAIF,IAAI,CAACG;AAAT;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA,WAAQH,IAAI,CAACC,IAAb;AAAA;AAAA;AAAA;AAAA,gBADF;;AAMF,WAAK,UAAL;AACI,4BACI;AAAA,qBACDD,IAAI,CAACC,IADJ,OACWD,IAAI,CAACE,aADhB,eAC8B;AAAA;AAAA;AAAA;AAAA,kBAD9B,eAEF;AAAA,sBAAIF,IAAI,CAACG;AAAT;AAAA;AAAA;AAAA;AAAA,kBAFE;AAAA,WAAQH,IAAI,CAACC,IAAb;AAAA;AAAA;AAAA;AAAA,gBADJ;;AAMJ,WAAK,0BAAL;AACE,4BACE;AAAA,qBACGD,IAAI,CAACC,IADR,OACeD,IAAI,CAACE,aADpB,OACoCF,IAAI,CAACI,iBADzC;AAAA,WAAQJ,IAAI,CAACC,IAAb;AAAA;AAAA;AAAA;AAAA,gBADF;;AAKF,WAAK,mBAAL;AACE,4BACE;AAAA,qBACGD,IAAI,CAACC,IADR,OACeD,IAAI,CAACE,aADpB,eACkC;AAAA;AAAA;AAAA;AAAA,kBADlC,eAEE;AAAA,sBAAIF,IAAI,CAACG;AAAT;AAAA;AAAA;AAAA;AAAA,kBAFF,eAE2B;AAAA;AAAA;AAAA;AAAA,kBAF3B,eAGE;AAAG,YAAA,IAAI,EAAEH,IAAI,CAACK,sBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA,WAAQL,IAAI,CAACC,IAAb;AAAA;AAAA;AAAA;AAAA,gBADF;;AAOA;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACY;AACE,eAAOT,WAAW,CAACQ,IAAD,CAAlB;AAvCN;AAyCH,GA1CD;AA4CH,CA7CD;;KAAMH,I;AA+CN,eAAeA,IAAf","sourcesContent":["import React from \"react\";\n\nimport { CoursePart } from \"../types\";\n\nconst assertNever = (value: never): never => {\n  throw new Error(\n    `Unhandled type: ${JSON.stringify(value)}`\n  );\n};\n\nconst Part = ({courseParts}:{courseParts: CoursePart[]}) => {\n    courseParts.forEach(part => {\n        switch(part.name) {\n            case \"Fundamentals\":\n              return (\n                <p key={part.name}>\n                  {part.name} {part.exerciseCount}<br />\n                  <i>{part.description}</i>\n                </p>\n              );\n            case \"Advanced\":\n                return (\n                    <p key={part.name}>\n                  {part.name} {part.exerciseCount}<br />\n                  <i>{part.description}</i>\n                </p>\n                );\n            case \"Using props to pass data\":\n              return (\n                <p key={part.name}>\n                  {part.name} {part.exerciseCount} {part.groupProjectCount}\n                </p>\n              );\n            case \"Deeper type usage\":\n              return (\n                <p key={part.name}>\n                  {part.name} {part.exerciseCount}<br />\n                  <i>{part.description}</i><br />\n                  <a href={part.exerciseSubmissionLink}>Submission Link</a>\n                </p>\n              );\n              /*\n            case \"Exhaustive type checking\":\n              return (\n                <p key={part.name}>\n                  {part.name} {part.exerciseCount}<br />\n                  <i>{part.description}</i><br />\n                  Rating: <b>{part.rating}</b>\n                </p>\n              ); */\n            default:\n              return assertNever(part);\n          }\n    })\n  \n};\n\nexport default Part; "]},"metadata":{},"sourceType":"module"}